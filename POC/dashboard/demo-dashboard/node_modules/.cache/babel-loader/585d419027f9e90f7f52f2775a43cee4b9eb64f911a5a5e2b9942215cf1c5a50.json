{"ast":null,"code":"var _jsxFileName = \"/media/psf/Home/Desktop/MX/MX Project/MX Project/CITRA/POC/dashboard/demo-dashboard/src/component/CITRA_Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Grid, Paper, Typography } from '@mui/material';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst CITRADashboard = () => {\n  _s();\n  const [chartData, setChartData] = useState({});\n  useEffect(() => {\n    fetch('https://citra-eva2ckcawq-uc.a.run.app/values') // Replace with your API endpoint\n    .then(response => response.json()).then(data => {\n      // Assuming the API response is an array of objects with 'emotion' and 'percentage'\n      setChartData({\n        labels: data.map(item => item.emotion),\n        datasets: [{\n          label: 'Emotion Distribution',\n          data: data.map(item => item.percentage),\n          backgroundColor: [\n          // Add more colors for each emotion\n          'rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)'\n          // ...\n          ],\n          borderColor: [\n          // Add border colors for each emotion\n          'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)'\n          // ...\n          ],\n          borderWidth: 1\n        }]\n      });\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        style: {\n          padding: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"CITRA Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pie, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(CITRADashboard, \"qLlYZUJv3crif/0xI+dehEQf0o0=\");\n_c = CITRADashboard;\nexport default CITRADashboard;\nvar _c;\n$RefreshReg$(_c, \"CITRADashboard\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Grid","Paper","Typography","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","CITRADashboard","_s","chartData","setChartData","fetch","then","response","json","data","labels","map","item","emotion","datasets","label","percentage","backgroundColor","borderColor","borderWidth","catch","error","console","container","spacing","children","xs","elevation","style","padding","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/psf/Home/Desktop/MX/MX Project/MX Project/CITRA/POC/dashboard/demo-dashboard/src/component/CITRA_Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState ,useContext} from 'react';\nimport { Grid, Paper, Typography } from '@mui/material';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst CITRADashboard = () => {\n  const [chartData, setChartData] = useState({});\n\n  useEffect(() => {\n    fetch('https://citra-eva2ckcawq-uc.a.run.app/values') // Replace with your API endpoint\n      .then(response => response.json())\n      .then(data => {\n        // Assuming the API response is an array of objects with 'emotion' and 'percentage'\n        setChartData({\n          labels: data.map(item => item.emotion),\n          datasets: [{\n            label: 'Emotion Distribution',\n            data: data.map(item => item.percentage),\n            backgroundColor: [\n              // Add more colors for each emotion\n              'rgba(255, 99, 132, 0.2)',\n              'rgba(54, 162, 235, 0.2)',\n              // ...\n            ],\n            borderColor: [\n              // Add border colors for each emotion\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              // ...\n            ],\n            borderWidth: 1\n          }]\n        });\n      })\n      .catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Paper elevation={3} style={{ padding: '20px' }}>\n          <Typography variant=\"h4\" gutterBottom>\n            CITRA Dashboard\n          </Typography>\n          <Pie data={chartData} />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default CITRADashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAO,OAAO;AAC7D,SAASC,IAAI,EAAEC,KAAK,EAAEC,UAAU,QAAQ,eAAe;AACvD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,IAAIC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzEL,OAAO,CAACM,QAAQ,CAACL,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE7C,MAAMI,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACdmB,KAAK,CAAC,8CAA8C,CAAC,CAAC;IAAA,CACnDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ;MACAL,YAAY,CAAC;QACXM,MAAM,EAAED,IAAI,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,OAAO,CAAC;QACtCC,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAE,sBAAsB;UAC7BN,IAAI,EAAEA,IAAI,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACI,UAAU,CAAC;UACvCC,eAAe,EAAE;UACf;UACA,yBAAyB,EACzB;UACA;UAAA,CACD;UACDC,WAAW,EAAE;UACX;UACA,uBAAuB,EACvB;UACA;UAAA,CACD;UACDC,WAAW,EAAE;QACf,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEtB,OAAA,CAACV,IAAI;IAACkC,SAAS;IAACC,OAAO,EAAE,CAAE;IAAAC,QAAA,eACzB1B,OAAA,CAACV,IAAI;MAACuB,IAAI;MAACc,EAAE,EAAE,EAAG;MAAAD,QAAA,eAChB1B,OAAA,CAACT,KAAK;QAACqC,SAAS,EAAE,CAAE;QAACC,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAO,CAAE;QAAAJ,QAAA,gBAC9C1B,OAAA,CAACR,UAAU;UAACuC,OAAO,EAAC,IAAI;UAACC,YAAY;UAAAN,QAAA,EAAC;QAEtC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbpC,OAAA,CAACP,GAAG;UAACiB,IAAI,EAAEN;QAAU;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX,CAAC;AAACjC,EAAA,CA5CID,cAAc;AAAAmC,EAAA,GAAdnC,cAAc;AA8CpB,eAAeA,cAAc;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}